[build-system]
requires = ["setuptools>=75.0.0", "wheel", "setuptools_scm[toml]>=5.0"]

[tool.ape.test]
show_internal = true

[tool.mypy]
exclude = ["build/", "dist/", "docs/", "tests/integration/cli/projects/"]
check_untyped_defs = true
plugins = ["pydantic.mypy"]

[tool.setuptools_scm]
# The fallback version is so that CI/CD systems will use a more accurate version.
# Otherwise, you may have issues with plugins' pinning Ape and not using the expected version.
# This version is purposely set to really high minor so that it should always work
# with newer, stricter plugin releases.
# NOTE: This should be bumped with every minor release!
fallback_version = "0.8.999"
write_to = "src/ape/version.py"

# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.
[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'

[tool.pytest.ini_options]
norecursedirs = "projects"

# NOTE: 'no:ape_test' Prevents the ape plugin from activating on our tests
#    And 'pytest_ethereum' is not used and causes issues in some environments.
addopts = """
-p no:pytest_ethereum
-p no:boa_test
"""

python_files = "test_*.py"
testpaths = "tests"
markers = """fuzzing: Run Hypothesis fuzz test suite
pip: tests that rely on pip install operations"""
timeout = 300

[tool.ruff]
target-version = "py39"
line-length = 100

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "PT",   # flake8-pytest-style
    "ICN",  # flake8-import-conventions
    "PTH",  # flake8-use-pathlib
    # "RET",  # flake8-return (removed per maintainer feedback)
    # "SIM",  # flake8-simplify (removed per maintainer feedback)
    "T20",  # flake8-print
    "TC",   # flake8-type-checking
    "TCH",  # flake8-type-checking
    "RUF",  # Ruff-specific rules
    "ERA",  # flake8-eradicate
    "TID",  # flake8-tidy-imports
    "BLE",  # flake8-blind-except
    # "FBT",  # flake8-boolean-trap (removed per maintainer feedback)
    "PD",   # pandas-vet
    "PGH",  # pygrep-hooks
    "PLC",  # pylint conventions
    "PLE",  # pylint errors
    "PLW",  # pylint warnings
    "PIE",  # flake8-pie
]
ignore = [
    "PLW0603",   # Using global statement to update variable is often necessary
    "E501",      # Line length enforced by black
    "RUF001",    # String contains ambiguous unicode character
    "RUF002",    # Docstring contains ambiguous unicode character
    "RUF003",    # Comment contains ambiguous unicode character
    "PLW2901",   # For loop variable overwritten by assignment target
    "PD901",     # Using `.loc` to modify values is preferred over pandas direct assignments
    "SIM102",    # Use a single if statement instead of nested if statements (maintain if-elif style)
    "SIM108",    # Use ternary operator instead of if-else block (maintain preferred if-else style)
    "SIM114",    # Combine if branches using logical or operator (maintain if-elif style)
]

[tool.ruff.lint.per-file-ignores]
"**/tests/**/*.py" = [
    "E501",      # Line too long in tests is acceptable
    "PLR2004",   # Magic numbers in tests are acceptable
    "S101",      # Use of assert is fine in tests
    "PT009",     # Use of unittest.TestCase is acceptable
    "PLC1901",   # Empty string comparison can be simplified is less readable in tests
]
"**/conftest.py" = [
    "F401",  # Imported but unused, fixtures are used implicitly
]

[tool.ruff.lint.isort]
known-first-party = ["ape", "ape_accounts", "ape_console", "ape_ethereum", "ape_geth", "ape_networks", "ape_node", "ape_plugins", "ape_pm", "ape_test"]

[tool.ruff.format]
quote-style = "double"
line-ending = "auto"
indent-style = "space"
docstring-code-format = true

[tool.mdformat]
number = true