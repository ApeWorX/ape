on: ["push", "pull_request"]

name: Test

concurrency:
  # Cancel older, in-progress jobs from the same PR, same workflow.
  # use run_id if the job is triggered by a push to ensure
  # push-triggered jobs to not get canceled.
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
    linting:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3

        - name: Setup Python
          uses: actions/setup-python@v4
          with:
              python-version: "3.10"

        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip install .[lint]

        - name: Run Black
          run: black --check .

        - name: Run isort
          run: isort --check-only .

        - name: Run flake8
          run: flake8 .

        - name: Run mdformat
          run: mdformat . --check

    type-check:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3

        - name: Setup Python
          uses: actions/setup-python@v4
          with:
              python-version: "3.10"

        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip install .[lint,test]

        - name: Run MyPy
          run: mypy .

    functional:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest]   # eventually add `windows-latest`
                python-version: [3.8, 3.9, "3.10", "3.11"]

        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GETH_VERSION: 1.11.5

        steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: Setup Python
          uses: actions/setup-python@v4
          with:
              python-version: ${{ matrix.python-version }}

        - name: Setup Go
          uses: actions/setup-go@v4
          with:
            go-version: '^1.20.1'

        - name: Cache Geth
          id: cache-geth
          uses: actions/cache@v3
          with:
            path: $HOME/.local/bin
            key: ${{ runner.os }}-geth-${{ env.GETH_VERSION }}

        - name: Install Geth
          if: steps.cache-geth.outputs.cache-hit != 'true'
          run: |
            mkdir -p $HOME/.local/bin
            wget -O geth.tar.gz "https://github.com/ethereum/go-ethereum/archive/v$GETH_VERSION.tar.gz"
            tar -zxvf geth.tar.gz
            cd go-ethereum-$GETH_VERSION
            make geth
            cp ./build/bin/geth /usr/local/bin
            geth version

        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip uninstall eth-ape --yes
            pip install .[test]

        - name: Run Tests
          run: pytest -m "not fuzzing" -s --cov=src -n auto --dist loadscope

    fuzzing:
        runs-on: ubuntu-latest

        strategy:
            fail-fast: true

        steps:
        - uses: actions/checkout@v3

        - name: Setup Python
          uses: actions/setup-python@v4
          with:
              python-version: "3.10"

        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip install .[test]

        - name: Run Tests
          run: pytest -m "fuzzing" --no-cov -s
